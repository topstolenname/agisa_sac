name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
  id-token: write # Required for GCP Workload Identity Federation

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with flake8
        run: flake8 src tests
      - name: Check formatting with black
        run: black --check src tests

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', '**/requirements*.txt') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements-dev.txt
          pip install pytest

      - name: Run tests with coverage
        run: |
          pytest --junitxml=test-results.xml --cov=agisa_sac --cov-report=xml | tee pytest.log

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.python-version }}
          path: |
            pytest.log
            test-results.xml
            coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Authenticate to Google Cloud
        if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11'
        uses: google-github-actions/setup-gcloud@v2

      - name: GCloud smoke test
        if: github.ref == 'refs/heads/main' && matrix.python-version == '3.11'
        run: gcloud run services list --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Slack failure notification
        if: failure() && secrets.SLACK_WEBHOOK_URL != ''
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "CI Job Failed: `${{ github.workflow }}`",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "CI Job Failed: `${{ github.workflow }}`"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*Repository:*\n`${{ github.repository }}`" },
                    { "type": "mrkdwn", "text": "*Ref:*\n`${{ github.ref }}`" },
                    { "type": "mrkdwn", "text": "*Job Status:*\n${{ job.status }}" },
                    { "type": "mrkdwn", "text": "*Triggered by:*\n${{ github.actor }}" }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    { "type": "button", "text": { "type": "plain_text", "text": "View Failed Run" }, "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
