{
  "architecture": {
    "federatednetwork": {
      "title": "FederatedNetwork",
      "description": "This class represents the overarching federated cognition network. It manages a collection of `SimulatedNode` instances, an `ObserverAgent`, and tracks active chaos events, proposal propagations, and historical metrics. It is responsible for broadcasting `CBPProposal` objects and facilitating inter-node communication."
    },
    "simulatednode": {
      "title": "SimulatedNode",
      "description": "Each `SimulatedNode` represents an individual participant in the federated network. Nodes maintain their state (`HEALTHY`, `DEGRADED`, etc.), a local `memory_store`, and a `reputation`. Nodes can propose memory merges and vote on incoming proposals. Crucially, they can be configured with artificial delays and failure rates to simulate impairments."
    },
    "memoryvector": {
      "title": "MemoryVector",
      "description": "This dataclass represents a simulated cognitive memory unit, akin to a data object that nodes share and seek consensus on. It contains an `id`, `content`, `timestamp`, and the originator `node_id`."
    },
    "cbpproposal": {
      "title": "CBPProposal",
      "description": "This dataclass encapsulates a Consensus-Based Proofing proposal. A node creates a proposal for a `MemoryVector` to be merged. It tracks votes from other nodes and determines if a majority consensus (greater than 50%) has been reached."
    },
    "observeragent": {
      "title": "ObserverAgent",
      "description": "A simplified anomaly detection agent responsible for monitoring proposals and the overall network state. It identifies anomalies based on predefined thresholds, such as high rejection rates or proposals from low-reputation nodes."
    },
    "chaosevent": {
      "title": "ChaosEvent",
      "description": "Defines a specific chaos engineering event, including its type (`NODE_CRASH`, `BYZANTINE_BEHAVIOR`, etc.), target nodes, duration, and parameters. It manages the lifecycle of a fault injection."
    }
  },
  "scenarios": {
    "node_failures": {
      "title": "Scenario: Node Failures",
      "description": "This test assesses the network's ability to maintain consensus when 20% of nodes suddenly crash. Proposals continue to be generated by the remaining healthy nodes to test operational resilience.",
      "stats": {
        "affected": "20% Crashed",
        "outcome": "95% Post-Recovery",
        "consensus": "88%",
        "impact": "Moderate Dip"
      },
      "healthData": [
        1,
        1,
        0.9,
        0.8,
        0.78,
        0.79,
        0.82,
        0.9,
        0.95,
        0.98,
        1
      ]
    },
    "byzantine_nodes": {
      "title": "Scenario: Byzantine Nodes",
      "description": "This test evaluates robustness against malicious actors. 30% of nodes become Byzantine, generating \"garbage\" proposals and voting randomly to disrupt consensus.",
      "stats": {
        "affected": "30% Malicious",
        "outcome": "85% Observer Effectiveness",
        "consensus": "65%",
        "impact": "Sustained Degradation"
      },
      "healthData": [
        1,
        0.95,
        0.85,
        0.78,
        0.75,
        0.73,
        0.72,
        0.74,
        0.75,
        0.78,
        0.8
      ]
    },
    "network_partitions": {
      "title": "Scenario: Network Partitions",
      "description": "Simulates a network split where 40% of nodes become isolated and unable to communicate with the majority. This tests if the main partition can maintain consensus.",
      "stats": {
        "affected": "40% Partitioned",
        "outcome": "Consensus Maintained",
        "consensus": "98% (in majority)",
        "impact": "Minimal (in majority)"
      },
      "healthData": [
        1,
        1,
        1,
        0.98,
        0.98,
        0.97,
        0.98,
        0.99,
        1,
        1,
        1
      ]
    },
    "resource_exhaustion": {
      "title": "Scenario: Resource Exhaustion",
      "description": "Analyzes the impact of degraded node performance. 25% of nodes experience high latency (2s message delay), simulating high CPU/memory load and its effect on throughput.",
      "stats": {
        "affected": "25% Degraded",
        "outcome": "45% Throughput Drop",
        "consensus": "92%",
        "impact": "Minor Dip"
      },
      "healthData": [
        1,
        0.98,
        0.95,
        0.92,
        0.9,
        0.91,
        0.93,
        0.95,
        0.98,
        0.99,
        1
      ]
    },
    "coordinated_attacks": {
      "title": "Scenario: Coordinated Attacks",
      "description": "A sophisticated attack where 20% of nodes coordinate. Half become malicious while the other half experience high gossip delay, creating a multi-faceted stress test.",
      "stats": {
        "affected": "20% Attacking",
        "outcome": "70% Final Health",
        "consensus": "55%",
        "impact": "Severe Degradation"
      },
      "healthData": [
        1,
        0.9,
        0.8,
        0.75,
        0.68,
        0.65,
        0.63,
        0.65,
        0.68,
        0.7,
        0.7
      ]
    }
  }
}